{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:26:44.863Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:26:50.593Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T17:27:02.907Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:27:17.116Z"}
{"level":"info","message":"POST /api/v1/auth/register","timestamp":"2025-01-22T17:33:26.969Z"}
{"level":"info","message":"POST /api/v1/auth/register - 404 - 6ms","timestamp":"2025-01-22T17:33:26.975Z"}
{"level":"info","message":"POST /generate","timestamp":"2025-01-22T17:36:11.497Z"}
{"level":"info","message":"POST /generate - 404 - 4ms","timestamp":"2025-01-22T17:36:11.501Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:36:34.445Z"}
{"code":"ERR_BAD_REQUEST","config":{"adapter":["xhr","http","fetch"],"data":"{\"model\":\"deepseek-ai/deepseek-coder-33b-instruct\",\"messages\":[{\"role\":\"system\",\"content\":\"As an expert MERN stack developer, generate:\\n- Clean, production-ready TypeScript code\\n- Separate files for frontend (React), backend (Express), and admin panel\\n- Proper TypeScript interfaces and type safety\\n- MongoDB schemas with relationships\\n- REST API endpoints with JWT authentication\\n\\nFormat response as JSON with this structure:\\n{\\n  \\\"frontend\\\": [{\\\"path\\\": \\\"src/components/Header.tsx\\\", \\\"code\\\": \\\"...\\\"}],\\n  \\\"backend\\\": [{\\\"path\\\": \\\"src/models/User.ts\\\", \\\"code\\\": \\\"...\\\"}],\\n  \\\"adminPanel\\\": [{\\\"path\\\": \\\"src/pages/AdminDashboard.tsx\\\", \\\"code\\\": \\\"...\\\"}]\\n}\"},{\"role\":\"user\",\"content\":\"Create a simple homepage with header and footer\"}],\"response_format\":{\"type\":\"json_object\"},\"temperature\":0.7}","env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer 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","Content-Length":"817","Content-Type":"application/json","HTTP-Referer":"https://your-app-domain.com","User-Agent":"axios/1.7.9","X-Title":"AI Code Builder"},"maxBodyLength":-1,"maxContentLength":-1,"method":"post","timeout":0,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"https://openrouter.ai/api/v1/chat/completions","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"level":"error","message":"AI API Error: Request failed with status code 400","name":"AxiosError","request":{"_closed":true,"_contentLength":"817","_defaultKeepAlive":true,"_ended":true,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"POST /api/v1/chat/completions HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer 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\r\nHTTP-Referer: https://your-app-domain.com\r\nX-Title: AI Code Builder\r\nUser-Agent: axios/1.7.9\r\nContent-Length: 817\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: openrouter.ai\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":false,"_redirectable":{"_currentRequest":"[Circular]","_currentUrl":"https://openrouter.ai/api/v1/chat/completions","_ended":true,"_ending":true,"_events":{},"_eventsCount":3,"_options":{"agents":{},"beforeRedirects":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer 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","Content-Length":"817","Content-Type":"application/json","HTTP-Referer":"https://your-app-domain.com","User-Agent":"axios/1.7.9","X-Title":"AI Code Builder"},"hostname":"openrouter.ai","maxBodyLength":null,"maxRedirects":21,"method":"POST","nativeProtocols":{"http:":{"METHODS":["ACL","BIND","CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LINK","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCALENDAR","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","QUERY","REBIND","REPORT","SEARCH","SOURCE","SUBSCRIBE","TRACE","UNBIND","UNLINK","UNLOCK","UNSUBSCRIBE"],"STATUS_CODES":{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a Teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Too Early","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"},"globalAgent":{"_events":{},"_eventsCount":2,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":0},"maxHeaderSize":16384},"https:":{"globalAgent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":["openrouter.ai:443:::::::::::::::::::::"],"map":{"openrouter.ai:443:::::::::::::::::::::":{"data":[48,130,5,12,2,1,1,2,2,3,4,4,2,19,2,4,32,153,250,71,117,46,76,31,117,13,87,69,237,191,23,218,36,3,71,158,139,77,111,113,39,159,93,5,134,77,151,121,241,4,48,248,113,95,176,39,113,184,209,199,176,41,124,196,238,78,111,37,186,224,144,4,71,62,184,113,183,99,121,183,182,69,149,94,28,17,195,44,201,182,218,82,175,4,140,92,87,93,185,161,6,2,4,103,145,44,163,162,4,2,2,28,32,163,130,3,172,48,130,3,168,48,130,3,78,160,3,2,1,2,2,16,88,247,232,2,244,130,7,213,19,124,61,148,0,185,221,88,48,10,6,8,42,134,72,206,61,4,3,2,48,59,49,11,48,9,6,3,85,4,6,19,2,85,83,49,30,48,28,6,3,85,4,10,19,21,71,111,111,103,108,101,32,84,114,117,115,116,32,83,101,114,118,105,99,101,115,49,12,48,10,6,3,85,4,3,19,3,87,69,49,48,30,23,13,50,53,48,49,48,55,48,54,52,49,48,57,90,23,13,50,53,48,52,48,55,48,55,52,49,48,50,90,48,24,49,22,48,20,6,3,85,4,3,19,13,111,112,101,110,114,111,117,116,101,114,46,97,105,48,89,48,19,6,7,42,134,72,206,61,2,1,6,8,42,134,72,206,61,3,1,7,3,66,0,4,9,44,245,239,37,153,93,94,215,247,126,108,165,225,227,196,244,13,210,201,35,5,236,103,8,81,70,28,43,76,89,115,69,170,232,170,67,103,0,68,130,81,165,80,239,105,42,21,174,24,220,99,85,122,233,255,152,146,168,247,86,155,232,202,163,130,2,85,48,130,2,81,48,14,6,3,85,29,15,1,1,255,4,4,3,2,7,128,48,19,6,3,85,29,37,4,12,48,10,6,8,43,6,1,5,5,7,3,1,48,12,6,3,85,29,19,1,1,255,4,2,48,0,48,29,6,3,85,29,14,4,22,4,20,196,106,17,246,26,157,76,126,136,218,127,25,83,23,7,12,3,193,1,134,48,31,6,3,85,29,35,4,24,48,22,128,20,144,119,146,53,103,196,255,168,204,169,230,123,217,128,121,123,204,147,249,56,48,94,6,8,43,6,1,5,5,7,1,1,4,82,48,80,48,39,6,8,43,6,1,5,5,7,48,1,134,27,104,116,116,112,58,47,47,111,46,112,107,105,46,103,111,111,103,47,115,47,119,101,49,47,87,80,99,48,37,6,8,43,6,1,5,5,7,48,2,134,25,104,116,116,112,58,47,47,105,46,112,107,105,46,103,111,111,103,47,119,101,49,46,99,114,116,48,41,6,3,85,29,17,4,34,48,32,130,13,111,112,101,110,114,111,117,116,101,114,46,97,105,130,15,42,46,111,112,101,110,114,111,117,116,101,114,46,97,105,48,19,6,3,85,29,32,4,12,48,10,48,8,6,6,103,129,12,1,2,1,48,54,6,3,85,29,31,4,47,48,45,48,43,160,41,160,39,134,37,104,116,116,112,58,47,47,99,46,112,107,105,46,103,111,111,103,47,119,101,49,47,85,110,55,57,76,109,52,45,75,95,115,46,99,114,108,48,130,1,2,6,10,43,6,1,4,1,214,121,2,4,2,4,129,243,4,129,240,0,238,0,117,0,207,17,86,238,213,46,124,175,243,135,91,217,105,46,155,233,26,113,103,74,176,23,236,172,1,210,91,119,206,204,59,8,0,0,1,148,63,181,217,72,0,0,4,3,0,70,48,68,2,32,27,231,39,4,126,164,193,20,255,102,168,10,36,176,178,102,186,236,74,98,96,152,170,79,179,102,238,221,222,70,151,165,2,32,85,182,110,14,236,158,128,196,20,20,209,170,34,136,37,198,203,221,228,45,131,116,17,113,119,58,122,207,195,1,54,241,0,117,0,230,210,49,99,64,119,140,193,16,65,6,215,113,185,206,193,210,64,246,150,132,134,251,186,135,50,29,253,30,55,142,80,0,0,1,148,63,181,217,26,0,0,4,3,0,70,48,68,2,32,102,24,230,154,248,137,212,225,154,88,186,84,246,183,7,12,210,171,164,138,140,117,203,26,199,189,188,106,4,203,193,191,2,32,59,109,191,34,81,218,192,112,21,41,252,36,54,14,97,62,58,48,73,252,196,80,103,122,223,152,150,105,154,164,244,177,48,10,6,8,42,134,72,206,61,4,3,2,3,72,0,48,69,2,33,0,192,156,210,54,215,59,167,132,60,242,158,208,101,16,151,133,200,216,54,3,241,168,175,157,208,236,174,61,33,113,191,8,2,32,13,247,184,140,50,74,161,35,240,43,114,163,47,178,44,134,251,188,93,172,28,128,157,16,12,127,82,160,167,242,162,66,164,2,4,0,166,15,4,13,111,112,101,110,114,111,117,116,101,114,46,97,105,169,5,2,3,0,253,32,170,129,195,4,129,192,8,153,209,0,168,52,1,67,227,249,35,159,250,92,118,237,104,142,86,101,52,90,231,137,230,15,128,34,115,211,37,54,57,241,24,62,180,87,118,38,157,217,238,116,197,186,202,119,103,7,76,62,73,137,186,15,254,140,84,119,48,202,12,140,239,114,141,218,121,70,130,59,49,157,9,182,83,77,80,194,193,79,114,245,57,210,102,154,212,246,196,182,182,254,53,184,200,167,105,238,152,152,143,164,79,235,233,49,64,123,50,0,94,220,192,237,94,25,148,78,30,15,154,255,220,160,195,166,229,102,250,22,138,129,206,119,246,62,58,164,40,47,79,154,201,112,84,120,5,2,136,76,227,206,111,71,152,174,96,226,219,163,161,131,240,144,220,93,36,226,80,41,146,49,44,1,98,71,194,240,248,128,238,172,229,201,52,138,48,202,205,225,174,6,2,4,27,145,214,37,179,3,2,1,29],"type":"Buffer"}}},"defaultPort":443,"freeSockets":{"openrouter.ai:443:::::::::::::::::::::":[{"_SNICallback":null,"_closeAfterHandlingError":false,"_controlReleased":true,"_events":{"close":[null,null,null]},"_eventsCount":9,"_hadError":false,"_host":"openrouter.ai","_httpMessage":null,"_newSessionPending":false,"_parent":null,"_pendingData":null,"_pendingEncoding":"","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_rejectUnauthorized":true,"_requestCert":true,"_secureEstablished":true,"_securePending":false,"_server":null,"_sockname":null,"_tlsOptions":{"isServer":false,"pipe":false,"rejectUnauthorized":true,"requestCert":true,"secureContext":{"context":{}}},"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0},"allowHalfOpen":false,"alpnProtocol":false,"authorizationError":null,"authorized":true,"autoSelectFamilyAttemptedAddresses":["2606:4700:99e4:c46a:7764:57a:1965:55e0:443"],"connecting":false,"encrypted":true,"parser":null,"secureConnecting":false,"servername":"openrouter.ai","ssl":{"_parent":{"onconnection":null,"reading":true},"_parentWrap":null,"_secureContext":{"context":{}},"reading":true},"timeout":5000}]},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":1}}},"path":"/api/v1/chat/completions","pathname":"/api/v1/chat/completions","port":"","protocol":"https:"},"_redirectCount":0,"_redirects":[],"_requestBodyBuffers":[],"_requestBodyLength":817,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0}},"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":["openrouter.ai:443:::::::::::::::::::::"],"map":{"openrouter.ai:443:::::::::::::::::::::":{"data":[48,130,5,12,2,1,1,2,2,3,4,4,2,19,2,4,32,153,250,71,117,46,76,31,117,13,87,69,237,191,23,218,36,3,71,158,139,77,111,113,39,159,93,5,134,77,151,121,241,4,48,248,113,95,176,39,113,184,209,199,176,41,124,196,238,78,111,37,186,224,144,4,71,62,184,113,183,99,121,183,182,69,149,94,28,17,195,44,201,182,218,82,175,4,140,92,87,93,185,161,6,2,4,103,145,44,163,162,4,2,2,28,32,163,130,3,172,48,130,3,168,48,130,3,78,160,3,2,1,2,2,16,88,247,232,2,244,130,7,213,19,124,61,148,0,185,221,88,48,10,6,8,42,134,72,206,61,4,3,2,48,59,49,11,48,9,6,3,85,4,6,19,2,85,83,49,30,48,28,6,3,85,4,10,19,21,71,111,111,103,108,101,32,84,114,117,115,116,32,83,101,114,118,105,99,101,115,49,12,48,10,6,3,85,4,3,19,3,87,69,49,48,30,23,13,50,53,48,49,48,55,48,54,52,49,48,57,90,23,13,50,53,48,52,48,55,48,55,52,49,48,50,90,48,24,49,22,48,20,6,3,85,4,3,19,13,111,112,101,110,114,111,117,116,101,114,46,97,105,48,89,48,19,6,7,42,134,72,206,61,2,1,6,8,42,134,72,206,61,3,1,7,3,66,0,4,9,44,245,239,37,153,93,94,215,247,126,108,165,225,227,196,244,13,210,201,35,5,236,103,8,81,70,28,43,76,89,115,69,170,232,170,67,103,0,68,130,81,165,80,239,105,42,21,174,24,220,99,85,122,233,255,152,146,168,247,86,155,232,202,163,130,2,85,48,130,2,81,48,14,6,3,85,29,15,1,1,255,4,4,3,2,7,128,48,19,6,3,85,29,37,4,12,48,10,6,8,43,6,1,5,5,7,3,1,48,12,6,3,85,29,19,1,1,255,4,2,48,0,48,29,6,3,85,29,14,4,22,4,20,196,106,17,246,26,157,76,126,136,218,127,25,83,23,7,12,3,193,1,134,48,31,6,3,85,29,35,4,24,48,22,128,20,144,119,146,53,103,196,255,168,204,169,230,123,217,128,121,123,204,147,249,56,48,94,6,8,43,6,1,5,5,7,1,1,4,82,48,80,48,39,6,8,43,6,1,5,5,7,48,1,134,27,104,116,116,112,58,47,47,111,46,112,107,105,46,103,111,111,103,47,115,47,119,101,49,47,87,80,99,48,37,6,8,43,6,1,5,5,7,48,2,134,25,104,116,116,112,58,47,47,105,46,112,107,105,46,103,111,111,103,47,119,101,49,46,99,114,116,48,41,6,3,85,29,17,4,34,48,32,130,13,111,112,101,110,114,111,117,116,101,114,46,97,105,130,15,42,46,111,112,101,110,114,111,117,116,101,114,46,97,105,48,19,6,3,85,29,32,4,12,48,10,48,8,6,6,103,129,12,1,2,1,48,54,6,3,85,29,31,4,47,48,45,48,43,160,41,160,39,134,37,104,116,116,112,58,47,47,99,46,112,107,105,46,103,111,111,103,47,119,101,49,47,85,110,55,57,76,109,52,45,75,95,115,46,99,114,108,48,130,1,2,6,10,43,6,1,4,1,214,121,2,4,2,4,129,243,4,129,240,0,238,0,117,0,207,17,86,238,213,46,124,175,243,135,91,217,105,46,155,233,26,113,103,74,176,23,236,172,1,210,91,119,206,204,59,8,0,0,1,148,63,181,217,72,0,0,4,3,0,70,48,68,2,32,27,231,39,4,126,164,193,20,255,102,168,10,36,176,178,102,186,236,74,98,96,152,170,79,179,102,238,221,222,70,151,165,2,32,85,182,110,14,236,158,128,196,20,20,209,170,34,136,37,198,203,221,228,45,131,116,17,113,119,58,122,207,195,1,54,241,0,117,0,230,210,49,99,64,119,140,193,16,65,6,215,113,185,206,193,210,64,246,150,132,134,251,186,135,50,29,253,30,55,142,80,0,0,1,148,63,181,217,26,0,0,4,3,0,70,48,68,2,32,102,24,230,154,248,137,212,225,154,88,186,84,246,183,7,12,210,171,164,138,140,117,203,26,199,189,188,106,4,203,193,191,2,32,59,109,191,34,81,218,192,112,21,41,252,36,54,14,97,62,58,48,73,252,196,80,103,122,223,152,150,105,154,164,244,177,48,10,6,8,42,134,72,206,61,4,3,2,3,72,0,48,69,2,33,0,192,156,210,54,215,59,167,132,60,242,158,208,101,16,151,133,200,216,54,3,241,168,175,157,208,236,174,61,33,113,191,8,2,32,13,247,184,140,50,74,161,35,240,43,114,163,47,178,44,134,251,188,93,172,28,128,157,16,12,127,82,160,167,242,162,66,164,2,4,0,166,15,4,13,111,112,101,110,114,111,117,116,101,114,46,97,105,169,5,2,3,0,253,32,170,129,195,4,129,192,8,153,209,0,168,52,1,67,227,249,35,159,250,92,118,237,104,142,86,101,52,90,231,137,230,15,128,34,115,211,37,54,57,241,24,62,180,87,118,38,157,217,238,116,197,186,202,119,103,7,76,62,73,137,186,15,254,140,84,119,48,202,12,140,239,114,141,218,121,70,130,59,49,157,9,182,83,77,80,194,193,79,114,245,57,210,102,154,212,246,196,182,182,254,53,184,200,167,105,238,152,152,143,164,79,235,233,49,64,123,50,0,94,220,192,237,94,25,148,78,30,15,154,255,220,160,195,166,229,102,250,22,138,129,206,119,246,62,58,164,40,47,79,154,201,112,84,120,5,2,136,76,227,206,111,71,152,174,96,226,219,163,161,131,240,144,220,93,36,226,80,41,146,49,44,1,98,71,194,240,248,128,238,172,229,201,52,138,48,202,205,225,174,6,2,4,27,145,214,37,179,3,2,1,29],"type":"Buffer"}}},"defaultPort":443,"freeSockets":{"openrouter.ai:443:::::::::::::::::::::":[{"_SNICallback":null,"_closeAfterHandlingError":false,"_controlReleased":true,"_events":{"close":[null,null,null]},"_eventsCount":9,"_hadError":false,"_host":"openrouter.ai","_httpMessage":null,"_newSessionPending":false,"_parent":null,"_pendingData":null,"_pendingEncoding":"","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_rejectUnauthorized":true,"_requestCert":true,"_secureEstablished":true,"_securePending":false,"_server":null,"_sockname":null,"_tlsOptions":{"isServer":false,"pipe":false,"rejectUnauthorized":true,"requestCert":true,"secureContext":{"context":{}}},"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0},"allowHalfOpen":false,"alpnProtocol":false,"authorizationError":null,"authorized":true,"autoSelectFamilyAttemptedAddresses":["2606:4700:99e4:c46a:7764:57a:1965:55e0:443"],"connecting":false,"encrypted":true,"parser":null,"secureConnecting":false,"servername":"openrouter.ai","ssl":{"_parent":{"onconnection":null,"reading":true},"_parentWrap":null,"_secureContext":{"context":{}},"reading":true},"timeout":5000}]},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":1},"chunkedEncoding":false,"destroyed":true,"finished":true,"host":"openrouter.ai","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"POST","outputData":[],"outputSize":0,"parser":null,"path":"/api/v1/chat/completions","protocol":"https:","res":{"_consuming":false,"_dumped":false,"_events":{"end":[null,null]},"_eventsCount":4,"_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"aborted":false,"client":{"_SNICallback":null,"_closeAfterHandlingError":false,"_controlReleased":true,"_events":{"close":[null,null,null]},"_eventsCount":9,"_hadError":false,"_host":"openrouter.ai","_httpMessage":null,"_newSessionPending":false,"_parent":null,"_pendingData":null,"_pendingEncoding":"","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_rejectUnauthorized":true,"_requestCert":true,"_secureEstablished":true,"_securePending":false,"_server":null,"_sockname":null,"_tlsOptions":{"isServer":false,"pipe":false,"rejectUnauthorized":true,"requestCert":true,"secureContext":{"context":{}}},"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0},"allowHalfOpen":false,"alpnProtocol":false,"authorizationError":null,"authorized":true,"autoSelectFamilyAttemptedAddresses":["2606:4700:99e4:c46a:7764:57a:1965:55e0:443"],"connecting":false,"encrypted":true,"parser":null,"secureConnecting":false,"servername":"openrouter.ai","ssl":{"_parent":{"onconnection":null,"reading":true},"_parentWrap":null,"_secureContext":{"context":{}},"reading":true},"timeout":5000},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":null,"rawHeaders":["Date","Wed, 22 Jan 2025 17:36:35 GMT","Content-Type","application/json; charset=UTF-8","Content-Length","143","Connection","keep-alive","Access-Control-Allow-Origin","*","x-clerk-auth-message","Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)","x-clerk-auth-reason","token-invalid","x-clerk-auth-status","signed-out","Vary","Accept-Encoding","Server","cloudflare","CF-RAY","90614e9a98d3a8de-SIN"],"rawTrailers":[],"redirects":[],"req":"[Circular]","responseUrl":"https://openrouter.ai/api/v1/chat/completions","socket":null,"statusCode":400,"statusMessage":"Bad Request","upgrade":false,"url":""},"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"timeoutCb":null,"upgradeOrConnect":false,"useChunkedEncodingByDefault":true,"writable":true},"response":{"config":{"adapter":["xhr","http","fetch"],"data":"{\"model\":\"deepseek-ai/deepseek-coder-33b-instruct\",\"messages\":[{\"role\":\"system\",\"content\":\"As an expert MERN stack developer, generate:\\n- Clean, production-ready TypeScript code\\n- Separate files for frontend (React), backend (Express), and admin panel\\n- Proper TypeScript interfaces and type safety\\n- MongoDB schemas with relationships\\n- REST API endpoints with JWT authentication\\n\\nFormat response as JSON with this structure:\\n{\\n  \\\"frontend\\\": [{\\\"path\\\": \\\"src/components/Header.tsx\\\", \\\"code\\\": \\\"...\\\"}],\\n  \\\"backend\\\": [{\\\"path\\\": \\\"src/models/User.ts\\\", \\\"code\\\": \\\"...\\\"}],\\n  \\\"adminPanel\\\": [{\\\"path\\\": \\\"src/pages/AdminDashboard.tsx\\\", \\\"code\\\": \\\"...\\\"}]\\n}\"},{\"role\":\"user\",\"content\":\"Create a simple homepage with header and footer\"}],\"response_format\":{\"type\":\"json_object\"},\"temperature\":0.7}","env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer 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","Content-Length":"817","Content-Type":"application/json","HTTP-Referer":"https://your-app-domain.com","User-Agent":"axios/1.7.9","X-Title":"AI Code Builder"},"maxBodyLength":-1,"maxContentLength":-1,"method":"post","timeout":0,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"https://openrouter.ai/api/v1/chat/completions","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"data":{"error":{"code":400,"message":"deepseek-ai/deepseek-coder-33b-instruct is not a valid model ID"},"user_id":"user_2rzZVoIn43IvY9DMWjry7Dewx9B"},"headers":{"access-control-allow-origin":"*","cf-ray":"90614e9a98d3a8de-SIN","connection":"keep-alive","content-length":"143","content-type":"application/json; charset=UTF-8","date":"Wed, 22 Jan 2025 17:36:35 GMT","server":"cloudflare","vary":"Accept-Encoding","x-clerk-auth-message":"Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)","x-clerk-auth-reason":"token-invalid","x-clerk-auth-status":"signed-out"},"request":{"_closed":true,"_contentLength":"817","_defaultKeepAlive":true,"_ended":true,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"POST /api/v1/chat/completions HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nContent-Type: application/json\r\nAuthorization: Bearer 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\r\nHTTP-Referer: https://your-app-domain.com\r\nX-Title: AI Code Builder\r\nUser-Agent: axios/1.7.9\r\nContent-Length: 817\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: openrouter.ai\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":false,"_redirectable":{"_currentRequest":"[Circular]","_currentUrl":"https://openrouter.ai/api/v1/chat/completions","_ended":true,"_ending":true,"_events":{},"_eventsCount":3,"_options":{"agents":{},"beforeRedirects":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer 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","Content-Length":"817","Content-Type":"application/json","HTTP-Referer":"https://your-app-domain.com","User-Agent":"axios/1.7.9","X-Title":"AI Code Builder"},"hostname":"openrouter.ai","maxBodyLength":null,"maxRedirects":21,"method":"POST","nativeProtocols":{"http:":{"METHODS":["ACL","BIND","CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LINK","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCALENDAR","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","QUERY","REBIND","REPORT","SEARCH","SOURCE","SUBSCRIBE","TRACE","UNBIND","UNLINK","UNLOCK","UNSUBSCRIBE"],"STATUS_CODES":{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a Teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Too Early","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"},"globalAgent":{"_events":{},"_eventsCount":2,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":0},"maxHeaderSize":16384},"https:":{"globalAgent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":["openrouter.ai:443:::::::::::::::::::::"],"map":{"openrouter.ai:443:::::::::::::::::::::":{"data":[48,130,5,12,2,1,1,2,2,3,4,4,2,19,2,4,32,153,250,71,117,46,76,31,117,13,87,69,237,191,23,218,36,3,71,158,139,77,111,113,39,159,93,5,134,77,151,121,241,4,48,248,113,95,176,39,113,184,209,199,176,41,124,196,238,78,111,37,186,224,144,4,71,62,184,113,183,99,121,183,182,69,149,94,28,17,195,44,201,182,218,82,175,4,140,92,87,93,185,161,6,2,4,103,145,44,163,162,4,2,2,28,32,163,130,3,172,48,130,3,168,48,130,3,78,160,3,2,1,2,2,16,88,247,232,2,244,130,7,213,19,124,61,148,0,185,221,88,48,10,6,8,42,134,72,206,61,4,3,2,48,59,49,11,48,9,6,3,85,4,6,19,2,85,83,49,30,48,28,6,3,85,4,10,19,21,71,111,111,103,108,101,32,84,114,117,115,116,32,83,101,114,118,105,99,101,115,49,12,48,10,6,3,85,4,3,19,3,87,69,49,48,30,23,13,50,53,48,49,48,55,48,54,52,49,48,57,90,23,13,50,53,48,52,48,55,48,55,52,49,48,50,90,48,24,49,22,48,20,6,3,85,4,3,19,13,111,112,101,110,114,111,117,116,101,114,46,97,105,48,89,48,19,6,7,42,134,72,206,61,2,1,6,8,42,134,72,206,61,3,1,7,3,66,0,4,9,44,245,239,37,153,93,94,215,247,126,108,165,225,227,196,244,13,210,201,35,5,236,103,8,81,70,28,43,76,89,115,69,170,232,170,67,103,0,68,130,81,165,80,239,105,42,21,174,24,220,99,85,122,233,255,152,146,168,247,86,155,232,202,163,130,2,85,48,130,2,81,48,14,6,3,85,29,15,1,1,255,4,4,3,2,7,128,48,19,6,3,85,29,37,4,12,48,10,6,8,43,6,1,5,5,7,3,1,48,12,6,3,85,29,19,1,1,255,4,2,48,0,48,29,6,3,85,29,14,4,22,4,20,196,106,17,246,26,157,76,126,136,218,127,25,83,23,7,12,3,193,1,134,48,31,6,3,85,29,35,4,24,48,22,128,20,144,119,146,53,103,196,255,168,204,169,230,123,217,128,121,123,204,147,249,56,48,94,6,8,43,6,1,5,5,7,1,1,4,82,48,80,48,39,6,8,43,6,1,5,5,7,48,1,134,27,104,116,116,112,58,47,47,111,46,112,107,105,46,103,111,111,103,47,115,47,119,101,49,47,87,80,99,48,37,6,8,43,6,1,5,5,7,48,2,134,25,104,116,116,112,58,47,47,105,46,112,107,105,46,103,111,111,103,47,119,101,49,46,99,114,116,48,41,6,3,85,29,17,4,34,48,32,130,13,111,112,101,110,114,111,117,116,101,114,46,97,105,130,15,42,46,111,112,101,110,114,111,117,116,101,114,46,97,105,48,19,6,3,85,29,32,4,12,48,10,48,8,6,6,103,129,12,1,2,1,48,54,6,3,85,29,31,4,47,48,45,48,43,160,41,160,39,134,37,104,116,116,112,58,47,47,99,46,112,107,105,46,103,111,111,103,47,119,101,49,47,85,110,55,57,76,109,52,45,75,95,115,46,99,114,108,48,130,1,2,6,10,43,6,1,4,1,214,121,2,4,2,4,129,243,4,129,240,0,238,0,117,0,207,17,86,238,213,46,124,175,243,135,91,217,105,46,155,233,26,113,103,74,176,23,236,172,1,210,91,119,206,204,59,8,0,0,1,148,63,181,217,72,0,0,4,3,0,70,48,68,2,32,27,231,39,4,126,164,193,20,255,102,168,10,36,176,178,102,186,236,74,98,96,152,170,79,179,102,238,221,222,70,151,165,2,32,85,182,110,14,236,158,128,196,20,20,209,170,34,136,37,198,203,221,228,45,131,116,17,113,119,58,122,207,195,1,54,241,0,117,0,230,210,49,99,64,119,140,193,16,65,6,215,113,185,206,193,210,64,246,150,132,134,251,186,135,50,29,253,30,55,142,80,0,0,1,148,63,181,217,26,0,0,4,3,0,70,48,68,2,32,102,24,230,154,248,137,212,225,154,88,186,84,246,183,7,12,210,171,164,138,140,117,203,26,199,189,188,106,4,203,193,191,2,32,59,109,191,34,81,218,192,112,21,41,252,36,54,14,97,62,58,48,73,252,196,80,103,122,223,152,150,105,154,164,244,177,48,10,6,8,42,134,72,206,61,4,3,2,3,72,0,48,69,2,33,0,192,156,210,54,215,59,167,132,60,242,158,208,101,16,151,133,200,216,54,3,241,168,175,157,208,236,174,61,33,113,191,8,2,32,13,247,184,140,50,74,161,35,240,43,114,163,47,178,44,134,251,188,93,172,28,128,157,16,12,127,82,160,167,242,162,66,164,2,4,0,166,15,4,13,111,112,101,110,114,111,117,116,101,114,46,97,105,169,5,2,3,0,253,32,170,129,195,4,129,192,8,153,209,0,168,52,1,67,227,249,35,159,250,92,118,237,104,142,86,101,52,90,231,137,230,15,128,34,115,211,37,54,57,241,24,62,180,87,118,38,157,217,238,116,197,186,202,119,103,7,76,62,73,137,186,15,254,140,84,119,48,202,12,140,239,114,141,218,121,70,130,59,49,157,9,182,83,77,80,194,193,79,114,245,57,210,102,154,212,246,196,182,182,254,53,184,200,167,105,238,152,152,143,164,79,235,233,49,64,123,50,0,94,220,192,237,94,25,148,78,30,15,154,255,220,160,195,166,229,102,250,22,138,129,206,119,246,62,58,164,40,47,79,154,201,112,84,120,5,2,136,76,227,206,111,71,152,174,96,226,219,163,161,131,240,144,220,93,36,226,80,41,146,49,44,1,98,71,194,240,248,128,238,172,229,201,52,138,48,202,205,225,174,6,2,4,27,145,214,37,179,3,2,1,29],"type":"Buffer"}}},"defaultPort":443,"freeSockets":{"openrouter.ai:443:::::::::::::::::::::":[{"_SNICallback":null,"_closeAfterHandlingError":false,"_controlReleased":true,"_events":{"close":[null,null,null]},"_eventsCount":9,"_hadError":false,"_host":"openrouter.ai","_httpMessage":null,"_newSessionPending":false,"_parent":null,"_pendingData":null,"_pendingEncoding":"","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_rejectUnauthorized":true,"_requestCert":true,"_secureEstablished":true,"_securePending":false,"_server":null,"_sockname":null,"_tlsOptions":{"isServer":false,"pipe":false,"rejectUnauthorized":true,"requestCert":true,"secureContext":{"context":{}}},"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0},"allowHalfOpen":false,"alpnProtocol":false,"authorizationError":null,"authorized":true,"autoSelectFamilyAttemptedAddresses":["2606:4700:99e4:c46a:7764:57a:1965:55e0:443"],"connecting":false,"encrypted":true,"parser":null,"secureConnecting":false,"servername":"openrouter.ai","ssl":{"_parent":{"onconnection":null,"reading":true},"_parentWrap":null,"_secureContext":{"context":{}},"reading":true},"timeout":5000}]},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":1}}},"path":"/api/v1/chat/completions","pathname":"/api/v1/chat/completions","port":"","protocol":"https:"},"_redirectCount":0,"_redirects":[],"_requestBodyBuffers":[],"_requestBodyLength":817,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0}},"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":["openrouter.ai:443:::::::::::::::::::::"],"map":{"openrouter.ai:443:::::::::::::::::::::":{"data":[48,130,5,12,2,1,1,2,2,3,4,4,2,19,2,4,32,153,250,71,117,46,76,31,117,13,87,69,237,191,23,218,36,3,71,158,139,77,111,113,39,159,93,5,134,77,151,121,241,4,48,248,113,95,176,39,113,184,209,199,176,41,124,196,238,78,111,37,186,224,144,4,71,62,184,113,183,99,121,183,182,69,149,94,28,17,195,44,201,182,218,82,175,4,140,92,87,93,185,161,6,2,4,103,145,44,163,162,4,2,2,28,32,163,130,3,172,48,130,3,168,48,130,3,78,160,3,2,1,2,2,16,88,247,232,2,244,130,7,213,19,124,61,148,0,185,221,88,48,10,6,8,42,134,72,206,61,4,3,2,48,59,49,11,48,9,6,3,85,4,6,19,2,85,83,49,30,48,28,6,3,85,4,10,19,21,71,111,111,103,108,101,32,84,114,117,115,116,32,83,101,114,118,105,99,101,115,49,12,48,10,6,3,85,4,3,19,3,87,69,49,48,30,23,13,50,53,48,49,48,55,48,54,52,49,48,57,90,23,13,50,53,48,52,48,55,48,55,52,49,48,50,90,48,24,49,22,48,20,6,3,85,4,3,19,13,111,112,101,110,114,111,117,116,101,114,46,97,105,48,89,48,19,6,7,42,134,72,206,61,2,1,6,8,42,134,72,206,61,3,1,7,3,66,0,4,9,44,245,239,37,153,93,94,215,247,126,108,165,225,227,196,244,13,210,201,35,5,236,103,8,81,70,28,43,76,89,115,69,170,232,170,67,103,0,68,130,81,165,80,239,105,42,21,174,24,220,99,85,122,233,255,152,146,168,247,86,155,232,202,163,130,2,85,48,130,2,81,48,14,6,3,85,29,15,1,1,255,4,4,3,2,7,128,48,19,6,3,85,29,37,4,12,48,10,6,8,43,6,1,5,5,7,3,1,48,12,6,3,85,29,19,1,1,255,4,2,48,0,48,29,6,3,85,29,14,4,22,4,20,196,106,17,246,26,157,76,126,136,218,127,25,83,23,7,12,3,193,1,134,48,31,6,3,85,29,35,4,24,48,22,128,20,144,119,146,53,103,196,255,168,204,169,230,123,217,128,121,123,204,147,249,56,48,94,6,8,43,6,1,5,5,7,1,1,4,82,48,80,48,39,6,8,43,6,1,5,5,7,48,1,134,27,104,116,116,112,58,47,47,111,46,112,107,105,46,103,111,111,103,47,115,47,119,101,49,47,87,80,99,48,37,6,8,43,6,1,5,5,7,48,2,134,25,104,116,116,112,58,47,47,105,46,112,107,105,46,103,111,111,103,47,119,101,49,46,99,114,116,48,41,6,3,85,29,17,4,34,48,32,130,13,111,112,101,110,114,111,117,116,101,114,46,97,105,130,15,42,46,111,112,101,110,114,111,117,116,101,114,46,97,105,48,19,6,3,85,29,32,4,12,48,10,48,8,6,6,103,129,12,1,2,1,48,54,6,3,85,29,31,4,47,48,45,48,43,160,41,160,39,134,37,104,116,116,112,58,47,47,99,46,112,107,105,46,103,111,111,103,47,119,101,49,47,85,110,55,57,76,109,52,45,75,95,115,46,99,114,108,48,130,1,2,6,10,43,6,1,4,1,214,121,2,4,2,4,129,243,4,129,240,0,238,0,117,0,207,17,86,238,213,46,124,175,243,135,91,217,105,46,155,233,26,113,103,74,176,23,236,172,1,210,91,119,206,204,59,8,0,0,1,148,63,181,217,72,0,0,4,3,0,70,48,68,2,32,27,231,39,4,126,164,193,20,255,102,168,10,36,176,178,102,186,236,74,98,96,152,170,79,179,102,238,221,222,70,151,165,2,32,85,182,110,14,236,158,128,196,20,20,209,170,34,136,37,198,203,221,228,45,131,116,17,113,119,58,122,207,195,1,54,241,0,117,0,230,210,49,99,64,119,140,193,16,65,6,215,113,185,206,193,210,64,246,150,132,134,251,186,135,50,29,253,30,55,142,80,0,0,1,148,63,181,217,26,0,0,4,3,0,70,48,68,2,32,102,24,230,154,248,137,212,225,154,88,186,84,246,183,7,12,210,171,164,138,140,117,203,26,199,189,188,106,4,203,193,191,2,32,59,109,191,34,81,218,192,112,21,41,252,36,54,14,97,62,58,48,73,252,196,80,103,122,223,152,150,105,154,164,244,177,48,10,6,8,42,134,72,206,61,4,3,2,3,72,0,48,69,2,33,0,192,156,210,54,215,59,167,132,60,242,158,208,101,16,151,133,200,216,54,3,241,168,175,157,208,236,174,61,33,113,191,8,2,32,13,247,184,140,50,74,161,35,240,43,114,163,47,178,44,134,251,188,93,172,28,128,157,16,12,127,82,160,167,242,162,66,164,2,4,0,166,15,4,13,111,112,101,110,114,111,117,116,101,114,46,97,105,169,5,2,3,0,253,32,170,129,195,4,129,192,8,153,209,0,168,52,1,67,227,249,35,159,250,92,118,237,104,142,86,101,52,90,231,137,230,15,128,34,115,211,37,54,57,241,24,62,180,87,118,38,157,217,238,116,197,186,202,119,103,7,76,62,73,137,186,15,254,140,84,119,48,202,12,140,239,114,141,218,121,70,130,59,49,157,9,182,83,77,80,194,193,79,114,245,57,210,102,154,212,246,196,182,182,254,53,184,200,167,105,238,152,152,143,164,79,235,233,49,64,123,50,0,94,220,192,237,94,25,148,78,30,15,154,255,220,160,195,166,229,102,250,22,138,129,206,119,246,62,58,164,40,47,79,154,201,112,84,120,5,2,136,76,227,206,111,71,152,174,96,226,219,163,161,131,240,144,220,93,36,226,80,41,146,49,44,1,98,71,194,240,248,128,238,172,229,201,52,138,48,202,205,225,174,6,2,4,27,145,214,37,179,3,2,1,29],"type":"Buffer"}}},"defaultPort":443,"freeSockets":{"openrouter.ai:443:::::::::::::::::::::":[{"_SNICallback":null,"_closeAfterHandlingError":false,"_controlReleased":true,"_events":{"close":[null,null,null]},"_eventsCount":9,"_hadError":false,"_host":"openrouter.ai","_httpMessage":null,"_newSessionPending":false,"_parent":null,"_pendingData":null,"_pendingEncoding":"","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_rejectUnauthorized":true,"_requestCert":true,"_secureEstablished":true,"_securePending":false,"_server":null,"_sockname":null,"_tlsOptions":{"isServer":false,"pipe":false,"rejectUnauthorized":true,"requestCert":true,"secureContext":{"context":{}}},"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0},"allowHalfOpen":false,"alpnProtocol":false,"authorizationError":null,"authorized":true,"autoSelectFamilyAttemptedAddresses":["2606:4700:99e4:c46a:7764:57a:1965:55e0:443"],"connecting":false,"encrypted":true,"parser":null,"secureConnecting":false,"servername":"openrouter.ai","ssl":{"_parent":{"onconnection":null,"reading":true},"_parentWrap":null,"_secureContext":{"context":{}},"reading":true},"timeout":5000}]},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":1},"chunkedEncoding":false,"destroyed":true,"finished":true,"host":"openrouter.ai","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"POST","outputData":[],"outputSize":0,"parser":null,"path":"/api/v1/chat/completions","protocol":"https:","res":{"_consuming":false,"_dumped":false,"_events":{"end":[null,null]},"_eventsCount":4,"_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"aborted":false,"client":{"_SNICallback":null,"_closeAfterHandlingError":false,"_controlReleased":true,"_events":{"close":[null,null,null]},"_eventsCount":9,"_hadError":false,"_host":"openrouter.ai","_httpMessage":null,"_newSessionPending":false,"_parent":null,"_pendingData":null,"_pendingEncoding":"","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_rejectUnauthorized":true,"_requestCert":true,"_secureEstablished":true,"_securePending":false,"_server":null,"_sockname":null,"_tlsOptions":{"isServer":false,"pipe":false,"rejectUnauthorized":true,"requestCert":true,"secureContext":{"context":{}}},"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0},"allowHalfOpen":false,"alpnProtocol":false,"authorizationError":null,"authorized":true,"autoSelectFamilyAttemptedAddresses":["2606:4700:99e4:c46a:7764:57a:1965:55e0:443"],"connecting":false,"encrypted":true,"parser":null,"secureConnecting":false,"servername":"openrouter.ai","ssl":{"_parent":{"onconnection":null,"reading":true},"_parentWrap":null,"_secureContext":{"context":{}},"reading":true},"timeout":5000},"complete":true,"httpVersion":"1.1","httpVersionMajor":1,"httpVersionMinor":1,"method":null,"rawHeaders":["Date","Wed, 22 Jan 2025 17:36:35 GMT","Content-Type","application/json; charset=UTF-8","Content-Length","143","Connection","keep-alive","Access-Control-Allow-Origin","*","x-clerk-auth-message","Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)","x-clerk-auth-reason","token-invalid","x-clerk-auth-status","signed-out","Vary","Accept-Encoding","Server","cloudflare","CF-RAY","90614e9a98d3a8de-SIN"],"rawTrailers":[],"redirects":[],"req":"[Circular]","responseUrl":"https://openrouter.ai/api/v1/chat/completions","socket":null,"statusCode":400,"statusMessage":"Bad Request","upgrade":false,"url":""},"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"timeoutCb":null,"upgradeOrConnect":false,"useChunkedEncodingByDefault":true,"writable":true},"status":400,"statusText":"Bad Request"},"stack":"AxiosError: Request failed with status code 400\n    at settle (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/axios/lib/core/settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/axios/lib/adapters/http.js:599:11)\n    at IncomingMessage.emit (node:events:536:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","status":400,"timestamp":"2025-01-22T17:36:35.777Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:47:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:36:35.786Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 1345ms","timestamp":"2025-01-22T17:36:35.790Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:40:07.958Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:41:20.191Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:41:41.477Z"}
{"level":"error","message":"AI API Error: Cannot read properties of undefined (reading '0')","stack":"TypeError: Cannot read properties of undefined (reading '0')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:44:37)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:41:43.258Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:47:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:41:43.259Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 1785ms","timestamp":"2025-01-22T17:41:43.262Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T17:42:15.730Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:42:29.241Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:42:42.998Z"}
{"level":"error","message":"AI API Error: Cannot read properties of undefined (reading '0')","stack":"TypeError: Cannot read properties of undefined (reading '0')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:44:37)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:42:44.670Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:47:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:42:44.671Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 1677ms","timestamp":"2025-01-22T17:42:44.674Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:43:28.240Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:43:35.770Z"}
{"error":{"code":402,"message":"More credits are required to run this request. 4096 token capacity required, 2666 available. To increase, visit https://openrouter.ai/credits and upgrade to a paid account"},"level":"error","message":"Invalid API response format:","timestamp":"2025-01-22T17:43:37.323Z"}
{"level":"error","message":"AI Service Error: Invalid API response format","stack":"Error: Invalid API response format\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:45:15)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:43:37.324Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:65:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:43:37.325Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 1560ms","timestamp":"2025-01-22T17:43:37.329Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:44:09.204Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:44:10.834Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:46:41.704Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:47:01.582Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:47:10.638Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:47:14.013Z"}
{"level":"error","message":"Failed to parse AI response as JSON: Unexpected token '#', \"## Project\"... is not valid JSON","stack":"SyntaxError: Unexpected token '#', \"## Project\"... is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:46:21)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:47:34.324Z"}
{"level":"error","message":"AI Service Error: Invalid JSON response from AI","stack":"Error: Invalid JSON response from AI\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:49:15)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:47:34.325Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:53:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:47:34.326Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 20317ms","timestamp":"2025-01-22T17:47:34.330Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:48:14.965Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:48:38.007Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:48:50.552Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:49:04.310Z"}
{"error":{"code":429,"message":"Provider returned error","metadata":{"provider_name":"Google","raw":{"__kind":"OK","data":"{\n  \"error\": {\n    \"code\": 429,\n    \"message\": \"Quota exceeded for aiplatform.googleapis.com/generate_content_requests_per_minute_per_project_per_base_model with base model: gemini-experimental. Please submit a quota increase request. https://cloud.google.com/vertex-ai/docs/generative-ai/quotas-genai.\",\n    \"status\": \"RESOURCE_EXHAUSTED\"\n  }\n}\n"}}},"level":"error","message":"Invalid API response format:","timestamp":"2025-01-22T17:49:07.073Z","user_id":"user_2rzZVoIn43IvY9DMWjry7Dewx9B"}
{"level":"error","message":"AI Service Error: Invalid API response format","stack":"Error: Invalid API response format\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:50:15)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:49:07.075Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:61:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:49:07.077Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 2771ms","timestamp":"2025-01-22T17:49:07.081Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:49:47.844Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:50:10.788Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:50:40.191Z"}
{"level":"error","message":"Failed to parse AI response as JSON: Unexpected token '`', \"```json\n{\n\"... is not valid JSON","stack":"SyntaxError: Unexpected token '`', \"```json\n{\n\"... is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:54:21)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:50:47.262Z"}
{"level":"error","message":"AI Service Error: Invalid JSON response from AI","stack":"Error: Invalid JSON response from AI\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:57:15)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:50:47.265Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:69:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:50:47.277Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 7091ms","timestamp":"2025-01-22T17:50:47.281Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:51:28.557Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:52:55.159Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:53:06.908Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T17:53:06.910Z"}
{"level":"error","message":"AI Service Error: Unexpected token '#', \"## MERN St\"... is not valid JSON","stack":"SyntaxError: Unexpected token '#', \"## MERN St\"... is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:133:34)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:53:16.102Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:166:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:53:16.104Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 9199ms","timestamp":"2025-01-22T17:53:16.107Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:53:28.735Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:54:20.476Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:54:24.445Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:54:30.231Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T17:54:30.497Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:54:37.760Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:54:48.538Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T17:54:48.540Z"}
{"level":"error","message":"AI Service Error: Cannot read properties of undefined (reading 'text')","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at NoOpOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at NoOpOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T17:54:51.122Z"}
{"level":"error","message":"Generation error: Failed to generate code","stack":"Error: Failed to generate code\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:166:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:54:51.125Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 2591ms","timestamp":"2025-01-22T17:54:51.129Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:55:57.217Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:56:35.490Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:56:36.440Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T17:56:36.442Z"}
{"details":{},"level":"error","message":"AI Service Error: Unexpected token '`', \"```json\n{\n\"... is not valid JSON","stack":"SyntaxError: Unexpected token '`', \"```json\n{\n\"... is not valid JSON\n    at JSON.parse (<anonymous>)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:149:34)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:56:48.674Z"}
{"level":"error","message":"Generation error: Unexpected token '`', \"```json\n{\n\"... is not valid JSON","stack":"Error: Unexpected token '`', \"```json\n{\n\"... is not valid JSON\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:187:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:56:48.675Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 12236ms","timestamp":"2025-01-22T17:56:48.676Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:58:12.423Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:58:32.859Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T17:58:32.861Z"}
{"level":"info","message":"Generating frontend and backend code...","timestamp":"2025-01-22T17:58:45.448Z"}
{"details":{},"level":"error","message":"AI Service Error: Cannot read properties of undefined (reading 'text')","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at NoOpOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at NoOpOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)\n    at async Promise.all (index 1)","timestamp":"2025-01-22T17:58:47.695Z"}
{"level":"error","message":"Generation error: Cannot read properties of undefined (reading 'text')","stack":"Error: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:217:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:58:47.699Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 14845ms","timestamp":"2025-01-22T17:58:47.704Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:59:14.201Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T17:59:16.080Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T17:59:35.393Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T17:59:35.396Z"}
{"level":"info","message":"Generating frontend and backend code...","timestamp":"2025-01-22T17:59:48.353Z"}
{"details":{},"level":"error","message":"AI Service Error: Cannot read properties of undefined (reading 'text')","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at NoOpOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at NoOpOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)\n    at async Promise.all (index 0)","timestamp":"2025-01-22T17:59:50.159Z"}
{"level":"error","message":"Generation error: Cannot read properties of undefined (reading 'text')","stack":"Error: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:237:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T17:59:50.163Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 14776ms","timestamp":"2025-01-22T17:59:50.168Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:00:54.038Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:01:09.551Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:01:26.068Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:01:26.070Z"}
{"error":"Unexpected response format from chain","input":{"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"Error: Unexpected response format from chain\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:178:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:01:38.474Z"}
{"details":{},"level":"error","message":"AI Service Error: Unexpected response format from chain","stack":"Error: Unexpected response format from chain\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:178:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:01:38.475Z"}
{"level":"error","message":"Generation error: Unexpected response format from chain","stack":"Error: Unexpected response format from chain\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:225:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:01:38.475Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 12410ms","timestamp":"2025-01-22T18:01:38.477Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:02:03.008Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:05:39.395Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:13:56.540Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:14:32.181Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:14:32.185Z"}
{"error":"Unexpected response format from chain","input":{"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"Error: Unexpected response format from chain\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:178:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:14:45.714Z"}
{"details":{},"level":"error","message":"AI Service Error: Unexpected response format from chain","stack":"Error: Unexpected response format from chain\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:178:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:14:45.715Z"}
{"level":"error","message":"Generation error: Unexpected response format from chain","stack":"Error: Unexpected response format from chain\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:225:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:14:45.716Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 13539ms","timestamp":"2025-01-22T18:14:45.720Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:15:58.087Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:16:35.334Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:16:35.337Z"}
{"level":"info","message":"Generating frontend and backend code...","timestamp":"2025-01-22T18:16:47.360Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Frontend (React App)\",\n        \"description\": \"Handles user interface and rendering the homepage.\",\n        \"components\": [\n          {\n            \"name\": \"Header Component\",\n            \"description\": \"Displays the header section of the homepage. Contains site title/logo and navigation (if any).\"\n          },\n          {\n            \"name\": \"Footer Component\",\n            \"description\": \"Displays the footer section of the homepage. Contains copyright information, links to relevant resources, etc.\"\n          },\n          {\n            \"name\": \"Homepage Component\",\n            \"description\": \"The main container component that orchestrates the display of Header, Footer, and potentially other content sections if needed in future. For now, it will simply render Header and Footer.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Backend (Node.js/Express Server)\",\n        \"description\": \"Serves the frontend application and handles API requests (although minimal for this simple homepage, included for MERN stack context).\",\n        \"components\": [\n          {\n            \"name\": \"Server\",\n            \"description\": \"Node.js server using Express.js to serve static files and define API routes (if required in future).\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Database (MongoDB)\",\n        \"description\": \"Database for storing application data. For this simple homepage, it might not be immediately necessary for content, but it's a core part of the MERN stack and allows for future expansion to dynamic content.  Could be used later for storing configuration or user data.\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"description\": \"User requests the homepage URL from the browser.\"\n      },\n      {\n        \"description\": \"The request reaches the Node.js/Express server.\"\n      },\n      {\n        \"description\": \"The server serves the static frontend (React application build files) to the browser.\"\n      },\n      {\n        \"description\": \"The browser loads the React application.\"\n      },\n      {\n        \"description\": \"React application renders the Homepage component, which in turn renders Header and Footer components.\"\n      },\n      {\n        \"description\": \"The user sees the homepage with header and footer.\"\n      }\n    ],\n    \"apis\": [\n      {\n        \"name\": \"(Future API - Placeholder)\",\n        \"description\": \"For this simple homepage, no APIs are strictly required to fetch content. However, if the homepage is intended to become dynamic in the future, backend APIs can be defined here to fetch data for header, footer, or other sections from the database. For now, the content can be considered static and embedded within the React components.\"\n      }\n    ]\n  },\n  \"tasks\": {\n    \"frontend\": [\n      {\n        \"task\": \"Set up React project with necessary dependencies (e.g., `create-react-app`).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create `Header` component: Implement the structure and styling of the header. Include placeholder content or basic site title/logo.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create `Footer` component: Implement the structure and styling of the footer. Include placeholder copyright information and relevant links (if any).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create `Homepage` component:  Structure the page to include `Header` and `Footer` components in the appropriate layout.  Add any placeholder main content if needed.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Style the homepage: Apply basic styling using CSS or a CSS framework (e.g., CSS modules, styled-components, or Tailwind CSS) to ensure a visually appealing and responsive layout for header and footer.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Build the React application for production.\",\n        \"assignee\": \"Frontend Team\"\n      }\n    ],\n    \"backend\": [\n      {\n        \"task\": \"Set up Node.js/Express server project and initialize `package.json`.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Configure Express to serve static files from the React application's build directory.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Create a basic server endpoint to confirm the backend is running (e.g., a simple `/api/health` route).\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Deploy the Node.js/Express server and ensure it correctly serves the frontend application.\",\n        \"assignee\": \"Backend Team\"\n      }\n    ]\n  }\n}","prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:16:49.160Z"}
{"details":{},"level":"error","message":"AI Service Error: Cannot read properties of undefined (reading 'text')","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:16:49.162Z"}
{"level":"error","message":"Generation error: Cannot read properties of undefined (reading 'text')","stack":"Error: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:243:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:16:49.165Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 13837ms","timestamp":"2025-01-22T18:16:49.170Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Frontend (React App)\",\n        \"description\": \"Handles user interface and rendering the homepage.\",\n        \"components\": [\n          {\n            \"name\": \"Header Component\",\n            \"description\": \"Displays the header section of the homepage. Contains site title/logo and navigation (if any).\"\n          },\n          {\n            \"name\": \"Footer Component\",\n            \"description\": \"Displays the footer section of the homepage. Contains copyright information, links to relevant resources, etc.\"\n          },\n          {\n            \"name\": \"Homepage Component\",\n            \"description\": \"The main container component that orchestrates the display of Header, Footer, and potentially other content sections if needed in future. For now, it will simply render Header and Footer.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Backend (Node.js/Express Server)\",\n        \"description\": \"Serves the frontend application and handles API requests (although minimal for this simple homepage, included for MERN stack context).\",\n        \"components\": [\n          {\n            \"name\": \"Server\",\n            \"description\": \"Node.js server using Express.js to serve static files and define API routes (if required in future).\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Database (MongoDB)\",\n        \"description\": \"Database for storing application data. For this simple homepage, it might not be immediately necessary for content, but it's a core part of the MERN stack and allows for future expansion to dynamic content.  Could be used later for storing configuration or user data.\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"description\": \"User requests the homepage URL from the browser.\"\n      },\n      {\n        \"description\": \"The request reaches the Node.js/Express server.\"\n      },\n      {\n        \"description\": \"The server serves the static frontend (React application build files) to the browser.\"\n      },\n      {\n        \"description\": \"The browser loads the React application.\"\n      },\n      {\n        \"description\": \"React application renders the Homepage component, which in turn renders Header and Footer components.\"\n      },\n      {\n        \"description\": \"The user sees the homepage with header and footer.\"\n      }\n    ],\n    \"apis\": [\n      {\n        \"name\": \"(Future API - Placeholder)\",\n        \"description\": \"For this simple homepage, no APIs are strictly required to fetch content. However, if the homepage is intended to become dynamic in the future, backend APIs can be defined here to fetch data for header, footer, or other sections from the database. For now, the content can be considered static and embedded within the React components.\"\n      }\n    ]\n  },\n  \"tasks\": {\n    \"frontend\": [\n      {\n        \"task\": \"Set up React project with necessary dependencies (e.g., `create-react-app`).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create `Header` component: Implement the structure and styling of the header. Include placeholder content or basic site title/logo.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create `Footer` component: Implement the structure and styling of the footer. Include placeholder copyright information and relevant links (if any).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create `Homepage` component:  Structure the page to include `Header` and `Footer` components in the appropriate layout.  Add any placeholder main content if needed.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Style the homepage: Apply basic styling using CSS or a CSS framework (e.g., CSS modules, styled-components, or Tailwind CSS) to ensure a visually appealing and responsive layout for header and footer.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Build the React application for production.\",\n        \"assignee\": \"Frontend Team\"\n      }\n    ],\n    \"backend\": [\n      {\n        \"task\": \"Set up Node.js/Express server project and initialize `package.json`.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Configure Express to serve static files from the React application's build directory.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Create a basic server endpoint to confirm the backend is running (e.g., a simple `/api/health` route).\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Deploy the Node.js/Express server and ensure it correctly serves the frontend application.\",\n        \"assignee\": \"Backend Team\"\n      }\n    ]\n  }\n}","prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:16:49.596Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:16:58.763Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:17:28.029Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:17:36.464Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:17:39.155Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:17:39.157Z"}
{"level":"info","message":"Generating frontend and backend code...","timestamp":"2025-01-22T18:17:49.877Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Frontend (React Application)\",\n        \"description\": \"Handles the user interface, rendering the header, footer, and homepage content in the browser.\",\n        \"subComponents\": [\n          {\n            \"name\": \"Header Component\",\n            \"description\": \"Displays the site header, including logo and navigation (if any).\"\n          },\n          {\n            \"name\": \"Footer Component\",\n            \"description\": \"Displays the site footer, including copyright information and links (if any).\"\n          },\n          {\n            \"name\": \"Homepage Component\",\n            \"description\": \"The main component for the homepage, acting as a container for header, footer, and any central page content (even if minimal for this simple homepage).\"\n          },\n          {\n            \"name\": \"App Component (Layout)\",\n            \"description\": \"The root component that orchestrates the overall layout of the application, embedding Header, Homepage, and Footer components.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Backend (Node.js/Express Server)\",\n        \"description\": \"Serves the static frontend application. Can be expanded for dynamic content or future APIs.\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"step\": \"1\",\n        \"description\": \"User's browser requests the homepage URL.\"\n      },\n      {\n        \"step\": \"2\",\n        \"description\": \"Backend (Node.js/Express server) receives the request.\"\n      },\n      {\n        \"step\": \"3\",\n        \"description\": \"Backend serves the static files (HTML, CSS, JavaScript) of the React application.\"\n      },\n      {\n        \"step\": \"4\",\n        \"description\": \"Browser receives and renders the React application.\"\n      },\n      {\n        \"step\": \"5\",\n        \"description\": \"React application components (Header, Homepage, Footer) are rendered, displaying the homepage with header and footer.\"\n      }\n    ],\n    \"apis\": [\n      {\n        \"name\": \"No APIs Required Initially\",\n        \"description\": \"For a simple static homepage, no backend APIs are strictly necessary. The frontend will render static content directly within components. However, a basic Express server setup will be in place to serve static files and can be extended for future API needs if the homepage evolves to include dynamic content.\"\n      },\n      {\n        \"name\": \"/ (GET)\",\n        \"description\": \"Endpoint on the backend server to serve the main HTML file of the React application. This is the entry point for the application. (Implicitly handled by static file serving in Express)\"\n      }\n    ]\n  },\n  \"tasks\": {\n    \"frontend\": [\n      {\n        \"task\": \"Set up React application using Create React App or similar.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Develop Header Component with placeholder content (e.g., site logo, site title).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Develop Footer Component with placeholder content (e.g., copyright information).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create Homepage Component to act as the main page container and integrate Header and Footer components.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Style Header and Footer components (and Homepage if needed) using CSS or a CSS framework (e.g., CSS Modules, Styled Components).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Ensure responsive design for Header and Footer components.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Test frontend components locally.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Build the React application for production.\",\n        \"assignee\": \"Frontend Team\"\n      }\n    ],\n    \"backend\": [\n      {\n        \"task\": \"Set up Node.js and Express server.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Configure Express to serve static files from the 'build' directory of the React application.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Create a basic server to serve the React application on a specified port.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Deploy the backend server to a suitable hosting platform (e.g., Heroku, AWS, Netlify - if server-side rendering or backend logic is anticipated later, otherwise static hosting for the 'build' folder might be sufficient).\",\n        \"assignee\": \"Backend Team\"\n      }\n    ]\n  }\n}","prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:17:51.760Z"}
{"details":{},"level":"error","message":"AI Service Error: Cannot read properties of undefined (reading 'text')","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:17:51.763Z"}
{"level":"error","message":"Generation error: Cannot read properties of undefined (reading 'text')","stack":"Error: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:243:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:17:51.766Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 12616ms","timestamp":"2025-01-22T18:17:51.771Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Frontend (React Application)\",\n        \"description\": \"Handles the user interface, rendering the header, footer, and homepage content in the browser.\",\n        \"subComponents\": [\n          {\n            \"name\": \"Header Component\",\n            \"description\": \"Displays the site header, including logo and navigation (if any).\"\n          },\n          {\n            \"name\": \"Footer Component\",\n            \"description\": \"Displays the site footer, including copyright information and links (if any).\"\n          },\n          {\n            \"name\": \"Homepage Component\",\n            \"description\": \"The main component for the homepage, acting as a container for header, footer, and any central page content (even if minimal for this simple homepage).\"\n          },\n          {\n            \"name\": \"App Component (Layout)\",\n            \"description\": \"The root component that orchestrates the overall layout of the application, embedding Header, Homepage, and Footer components.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Backend (Node.js/Express Server)\",\n        \"description\": \"Serves the static frontend application. Can be expanded for dynamic content or future APIs.\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"step\": \"1\",\n        \"description\": \"User's browser requests the homepage URL.\"\n      },\n      {\n        \"step\": \"2\",\n        \"description\": \"Backend (Node.js/Express server) receives the request.\"\n      },\n      {\n        \"step\": \"3\",\n        \"description\": \"Backend serves the static files (HTML, CSS, JavaScript) of the React application.\"\n      },\n      {\n        \"step\": \"4\",\n        \"description\": \"Browser receives and renders the React application.\"\n      },\n      {\n        \"step\": \"5\",\n        \"description\": \"React application components (Header, Homepage, Footer) are rendered, displaying the homepage with header and footer.\"\n      }\n    ],\n    \"apis\": [\n      {\n        \"name\": \"No APIs Required Initially\",\n        \"description\": \"For a simple static homepage, no backend APIs are strictly necessary. The frontend will render static content directly within components. However, a basic Express server setup will be in place to serve static files and can be extended for future API needs if the homepage evolves to include dynamic content.\"\n      },\n      {\n        \"name\": \"/ (GET)\",\n        \"description\": \"Endpoint on the backend server to serve the main HTML file of the React application. This is the entry point for the application. (Implicitly handled by static file serving in Express)\"\n      }\n    ]\n  },\n  \"tasks\": {\n    \"frontend\": [\n      {\n        \"task\": \"Set up React application using Create React App or similar.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Develop Header Component with placeholder content (e.g., site logo, site title).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Develop Footer Component with placeholder content (e.g., copyright information).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Create Homepage Component to act as the main page container and integrate Header and Footer components.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Style Header and Footer components (and Homepage if needed) using CSS or a CSS framework (e.g., CSS Modules, Styled Components).\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Ensure responsive design for Header and Footer components.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Test frontend components locally.\",\n        \"assignee\": \"Frontend Team\"\n      },\n      {\n        \"task\": \"Build the React application for production.\",\n        \"assignee\": \"Frontend Team\"\n      }\n    ],\n    \"backend\": [\n      {\n        \"task\": \"Set up Node.js and Express server.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Configure Express to serve static files from the 'build' directory of the React application.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Create a basic server to serve the React application on a specified port.\",\n        \"assignee\": \"Backend Team\"\n      },\n      {\n        \"task\": \"Deploy the backend server to a suitable hosting platform (e.g., Heroku, AWS, Netlify - if server-side rendering or backend logic is anticipated later, otherwise static hosting for the 'build' folder might be sufficient).\",\n        \"assignee\": \"Backend Team\"\n      }\n    ]\n  }\n}","prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:17:52.108Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:19:26.099Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:20:10.754Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:20:19.862Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:20:25.500Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:20:25.504Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:20:28.182Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:214:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:20:28.185Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:254:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:20:28.186Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 2688ms","timestamp":"2025-01-22T18:20:28.188Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:23:39.234Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:23:41.401Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:23:54.463Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:23:54.468Z"}
{"level":"info","message":"Generating frontend and backend code...","timestamp":"2025-01-22T18:24:02.150Z"}
{"error":"Unexpected token 'H', \"Here's the\"... is not valid JSON","input":"Here's the Express.js TypeScript backend code for the requirements:\n\n{\n  \"backend\": [\n    {\n      \"path\": \"src/app.ts\",\n      \"code\": \"import express, { Express, Request, Response } from 'express';\\n\\nconst app: Express = express();\\nconst port = process.env.PORT || 3000;\\n\\n// Middleware\\napp.use(express.json());\\n\\n// Homepage API\\napp.get('/', (req: Request, res: Response) => {\\n  const headerData = {\\n    title: 'My Website',\\n    navigation: [\\n      { label: 'Home', url: '/' },\\n      { label: 'About', url: '/about' },\\n      { label: 'Contact', url: '/contact' },\\n    ],\\n  };\\n\\n  const footerData = {\\n    copyright: 'Â© 2023 My Website. All rights reserved.',\\n    contactInfo: {\\n      email: 'info@mywebsite.com',\\n      phone: '123-456-7890',\\n    },\\n  };\\n\\n  const homePageData = {\\n    hero: {\\n      title: 'Welcome to My Website',\\n      description: 'Discover our amazing products and services.',\\n    },\\n    about: {\\n      title: 'About Us',\\n      description: 'Learn more about our company and our mission.',\\n    },\\n    contact: {\\n      title: 'Get in Touch',\\n      description: 'Contact us for more information.',\\n    },\\n  };\\n\\n  res.json({\\n    header: headerData,\\n    footer: footerData,\\n    home: homePageData,\\n  });\\n});\\n\\napp.listen(port, () => {\\n  console.log(`Server is running on port ${port}`);\\n});\\n\"\n    }\n  ]}\n\nThis code sets up an Express.js server with a single route for the homepage. The route returns a JSON object containing the necessary data for the header, footer, and home page components.\n\nThe `headerData` object contains the website title and navigation menu items. The `footerData` object contains the copyright information and contact details. The `homePageData` object contains the data for the hero, about, and contact sections of the home page.\n\nThe server listens on the specified port (or port 3000 by default) and logs a message when it starts running.\n\nNote that this is a basic setup, and you would need to add additional routes, middleware, and functionality to build a complete backend for the application.","level":"error","message":"JSON Parse Error:","timestamp":"2025-01-22T18:24:09.888Z"}
{"error":"Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Header\",\n        \"description\": \"Displays the website's title, navigation menu, and other header elements\"\n      },\n      {\n        \"name\": \"Footer\",\n        \"description\": \"Displays copyright information, contact details, and other footer elements\"\n      },\n      {\n        \"name\": \"Home Page\",\n        \"description\": \"The main content area of the homepage, which may include sections like hero, about, and contact\"\n      },\n      {\n        \"name\": \"MongoDB\",\n        \"description\": \"The database used to store and manage data for the application\"\n      },\n      {\n        \"name\": \"Express.js\",\n        \"description\": \"The web application framework used for the backend\"\n      },\n      {\n        \"name\": \"React.js\",\n        \"description\": \"The JavaScript library used for building the user interface on the frontend\"\n      },\n      {\n        \"name\": \"Node.js\",\n        \"description\": \"The runtime environment used for the backend\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"from\": \"Home Page\",\n        \"to\": \"Express.js\",\n        \"description\": \"The frontend sends requests to the backend API\"\n      },\n      {\n        \"from\": \"Express.js\",\n        \"to\": \"MongoDB\",\n        \"description\": \"The backend retrieves and stores data in the database\"\n      },\n      {\n        \"from\": \"MongoDB\",\n        \"to\": \"Express.js\",\n        \"description\": \"The backend retrieves data from the database to serve to the frontend\"\n      },\n      {\n        \"from\": \"Express.js\",\n        \"to\": \"Home Page\",\n        \"description\": \"The backend sends the requested data to the frontend\"\n      }\n    ],\n    \"apis\": [\n      {\n        \"name\": \"Homepage API\",\n        \"description\": \"Provides the necessary data to render the homepage\"\n      }\n    ]\n  },\n  \"tasks\": {\n    \"frontend\": [\n      \"Develop the Header component\",\n      \"Develop the Footer component\",\n      \"Develop the Home Page component\",\n      \"Integrate the React.js library\",\n      \"Implement the API calls to the backend\"\n    ],\n    \"backend\": [\n      \"Develop the Express.js server\",\n      \"Integrate the MongoDB database\",\n      \"Implement the Homepage API\",\n      \"Implement the data retrieval and storage logic\"\n    ]\n  }\n}","prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"Error: Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON\n    at Function.safeJsonParse (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:172:13)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:219:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:24:09.894Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON","stack":"Error: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:228:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:24:09.895Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON","stack":"Error: Failed to generate code: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:268:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:24:09.896Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 15440ms","timestamp":"2025-01-22T18:24:09.902Z"}
{"error":"Unexpected token 'H', \"Here's the\"... is not valid JSON","input":"Here's the response in the requested format:\n\n{\n  \"frontend\": [\n    {\n      \"path\": \"src/components/Header.tsx\",\n      \"code\": \"import React from 'react';\\n\\ninterface HeaderProps {\\n  title: string;\\n  navItems: { label: string; link: string }[];\\n}\\n\\nconst Header: React.FC<HeaderProps> = ({ title, navItems }) => {\\n  return (\\n    <header>\\n      <div className=\\\"header-content\\\">\\n        <h1>{title}</h1>\\n        <nav>\\n          <ul>\\n            {navItems.map((item, index) => (\\n              <li key={index}><a href={item.link}>{item.label}</a></li>\\n            ))}\\n          </ul>\\n        </nav>\\n      </div>\\n    </header>\\n  );\\n};\\n\\nexport default Header;\\n\"\n    },\n    {\n      \"path\": \"src/components/Footer.tsx\",\n      \"code\": \"import React from 'react';\\n\\ninterface FooterProps {\\n  copyright: string;\\n  contact: { label: string; link: string }[];\\n}\\n\\nconst Footer: React.FC<FooterProps> = ({ copyright, contact }) => {\\n  return (\\n    <footer>\\n      <div className=\\\"footer-content\\\">\\n        <p>{copyright}</p>\\n        <nav>\\n          <ul>\\n            {contact.map((item, index) => (\\n              <li key={index}><a href={item.link}>{item.label}</a></li>\\n            ))}\\n          </ul>\\n        </nav>\\n      </div>\\n    </footer>\\n  );\\n};\\n\\nexport default Footer;\\n\"\n    },\n    {\n      \"path\": \"src/pages/HomePage.tsx\",\n      \"code\": \"import React from 'react';\\nimport Header from '../components/Header';\\nimport Footer from '../components/Footer';\\n\\ninterface HomePageProps {\\n  title: string;\\n  navItems: { label: string; link: string }[];\\n  copyright: string;\\n  contact: { label: string; link: string }[];\\n  heroContent: string;\\n  aboutContent: string;\\n  contactContent: string;\\n}\\n\\nconst HomePage: React.FC<HomePageProps> = ({\\n  title,\\n  navItems,\\n  copyright,\\n  contact,\\n  heroContent,\\n  aboutContent,\\n  contactContent,\\n}) => {\\n  return (\\n    <div>\\n      <Header title={title} navItems={navItems} />\\n      <main>\\n        <section className=\\\"hero\\\">\\n          <h2>Welcome to our website</h2>\\n          <p>{heroContent}</p>\\n        </section>\\n        <section className=\\\"about\\\">\\n          <h2>About Us</h2>\\n          <p>{aboutContent}</p>\\n        </section>\\n        <section className=\\\"contact\\\">\\n          <h2>Contact Us</h2>\\n          <p>{contactContent}</p>\\n        </section>\\n      </main>\\n      <Footer copyright={copyright} contact={contact} />\\n    </div>\\n  );\\n};\\n\\nexport default HomePage;\\n\"\n    }\n  ]}","level":"error","message":"JSON Parse Error:","timestamp":"2025-01-22T18:24:10.120Z"}
{"error":"Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Header\",\n        \"description\": \"Displays the website's title, navigation menu, and other header elements\"\n      },\n      {\n        \"name\": \"Footer\",\n        \"description\": \"Displays copyright information, contact details, and other footer elements\"\n      },\n      {\n        \"name\": \"Home Page\",\n        \"description\": \"The main content area of the homepage, which may include sections like hero, about, and contact\"\n      },\n      {\n        \"name\": \"MongoDB\",\n        \"description\": \"The database used to store and manage data for the application\"\n      },\n      {\n        \"name\": \"Express.js\",\n        \"description\": \"The web application framework used for the backend\"\n      },\n      {\n        \"name\": \"React.js\",\n        \"description\": \"The JavaScript library used for building the user interface on the frontend\"\n      },\n      {\n        \"name\": \"Node.js\",\n        \"description\": \"The runtime environment used for the backend\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"from\": \"Home Page\",\n        \"to\": \"Express.js\",\n        \"description\": \"The frontend sends requests to the backend API\"\n      },\n      {\n        \"from\": \"Express.js\",\n        \"to\": \"MongoDB\",\n        \"description\": \"The backend retrieves and stores data in the database\"\n      },\n      {\n        \"from\": \"MongoDB\",\n        \"to\": \"Express.js\",\n        \"description\": \"The backend retrieves data from the database to serve to the frontend\"\n      },\n      {\n        \"from\": \"Express.js\",\n        \"to\": \"Home Page\",\n        \"description\": \"The backend sends the requested data to the frontend\"\n      }\n    ],\n    \"apis\": [\n      {\n        \"name\": \"Homepage API\",\n        \"description\": \"Provides the necessary data to render the homepage\"\n      }\n    ]\n  },\n  \"tasks\": {\n    \"frontend\": [\n      \"Develop the Header component\",\n      \"Develop the Footer component\",\n      \"Develop the Home Page component\",\n      \"Integrate the React.js library\",\n      \"Implement the API calls to the backend\"\n    ],\n    \"backend\": [\n      \"Develop the Express.js server\",\n      \"Integrate the MongoDB database\",\n      \"Implement the Homepage API\",\n      \"Implement the data retrieval and storage logic\"\n    ]\n  }\n}","prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"Error: Invalid JSON response from AI: Unexpected token 'H', \"Here's the\"... is not valid JSON\n    at Function.safeJsonParse (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:172:13)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:219:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:24:10.121Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:24:42.127Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:34:22.265Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:34:38.321Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:34:44.433Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:34:52.117Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:35:30.090Z"}
{"level":"info","message":"Getting master analysis and task delegation...","timestamp":"2025-01-22T18:35:30.095Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:35:41.114Z"}
{"level":"info","message":"Generating frontend and backend code...","timestamp":"2025-01-22T18:35:50.324Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"architectPlan":"{\n  \"plan\": {\n    \"components\": [\n      {\n        \"name\": \"Frontend (React Application)\",\n        \"description\": \"Handles user interface and presentation logic.\",\n        \"subComponents\": [\n          {\n            \"name\": \"Header Component\",\n            \"description\": \"Displays the header section of the homepage (e.g., logo, navigation).\"\n          },\n          {\n            \"name\": \"MainContent Component\",\n            \"description\": \"Displays the main content area of the homepage.\"\n          },\n          {\n            \"name\": \"Footer Component\",\n            \"description\": \"Displays the footer section of the homepage (e.g., copyright information, links).\"\n          },\n          {\n            \"name\": \"App Component\",\n            \"description\": \"The root component that orchestrates and renders Header, MainContent, and Footer components.\"\n          }\n        ],\n        \"technology\": \"ReactJS, HTML5, CSS3\"\n      },\n      {\n        \"name\": \"Backend (Node.js/Express.js Server)\",\n        \"description\": \"Serves the frontend application and can be extended for future APIs.\",\n        \"technology\": \"Node.js, Express.js\"\n      }\n    ],\n    \"dataFlow\": [\n      {\n        \"description\": \"Client (browser) requests the homepage from the backend server.\",\n        \"flow\": \"Browser -> Backend Server -> Frontend Application (served as static files) -> Browser\"\n      }\n    ],\n    \"apis\": []\n  },\n  \"tasks\": {\n    \"frontend\": [\n      {\n        \"task\": \"Define basic HTML structure\",\n        \"description\": \"Create the fundamental HTML structure for the homepage with <header>, <main>, and <footer> sections within the <body>.\",\n        \"details\": \"Use HTML5 semantic tags for structure. Include basic meta tags in the <head> section. Link a CSS stylesheet for styling.\",\n        \"masterInstructions\": [\n          \"Define the basic HTML structure for a homepage with header, main content, and footer sections.\"\n        ]\n      },\n      {\n        \"task\": \"Implement React Components\",\n        \"description\": \"Create React components for Header, MainContent, and Footer. Compose these components within the App component to render the homepage structure.\",\n        \"details\": \"Develop functional or class-based components in React. Pass down any necessary props for dynamic content in the future (though static for now).\"\n      },\n      {\n        \"task\": \"Apply Basic Styling\",\n        \"description\": \"Use CSS3 to style the Header, MainContent, and Footer components to create a visually appealing layout.\",\n        \"details\": \"Implement basic CSS for layout, typography, and colors. Ensure responsiveness for different screen sizes.\",\n        \"masterInstructions\": [\n          \"Specify the technologies to be used: HTML5, CSS3 for styling.\"\n        ]\n      },\n      {\n        \"task\": \"Integrate Frontend with Backend\",\n        \"description\": \"Configure the React application to be served by the backend server.\",\n        \"details\": \"Build the React application for production. Ensure the backend server serves the bundled static files (HTML, CSS, JS).\"\n      }\n    ],\n    \"backend\": [\n      {\n        \"task\": \"Set up Node.js/Express.js Server\",\n        \"description\": \"Initialize a basic Node.js server using Express.js to serve static files.\",\n        \"details\": \"Create a basic Express.js application. Configure middleware to serve static files from the frontend build directory.\"\n      },\n      {\n        \"task\": \"Serve Frontend Application\",\n        \"description\": \"Configure the Express.js server to serve the built React application as static files.\",\n        \"details\": \"Point the static file serving middleware to the directory containing the bundled React application files. Set up a route to serve the main HTML file.\"\n      }\n    ]\n  }\n}","masterInstructions":["Define a simple deployment strategy for static HTML and CSS files, assuming a basic web server environment for serving static content."],"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:35:52.662Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:260:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:35:52.667Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:314:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:35:52.670Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 22584ms","timestamp":"2025-01-22T18:35:52.674Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:37:42.897Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:37:51.006Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:37:56.789Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:38:03.881Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:38:07.226Z"}
{"level":"info","message":"Getting master analysis and task delegation...","timestamp":"2025-01-22T18:38:07.227Z"}
{"error":"Unexpected token 'T', \"The user w\"... is not valid JSON","input":"The user wants me to act as a Master Model and orchestrate the creation of a simple homepage.\nI need to:\n1. **Analyze the requirements:** Understand that a simple homepage with header and footer is needed.\n2. **Delegate tasks:**  Assign tasks to Architect, Frontend, Backend, and Reviewer worker models.  Since it's a simple *homepage with header and footer*, backend tasks may be minimal or non-existent.\n3. **Synthesize outputs:**  Imagine the outputs from each worker model and describe how they come together in the final synthesis.\n4. **Output JSON:** The response must be in JSON format, including \"analysis\", \"tasks\", and \"synthesis\" keys. The \"tasks\" key should contain lists of tasks for each worker role.\n\nLet's break down the tasks for each role:\n\n*   **Architect:** Design the basic structure, choose technologies (though for a simple homepage, this might be very basic - HTML/CSS/JS). Define components (header, footer, main content area).\n*   **Frontend:** Implement the visual part. HTML for structure, CSS for styling, maybe basic JS for minimal interactivity if needed (though not explicitly requested). Focus on header and footer layout and basic homepage structure.\n*   **Backend:**  For a *simple* homepage, backend might be about setup if needed. But for a static page, backend tasks might be minimal. Perhaps deployment considerations? Let's assume we can skip backend tasks for *just* header/footer homepage. Or include minimal tasks like \"setup basic server to serve static files\" if we want to be comprehensive. Let's keep it very minimal for now, maybe skip backend entirely for this simple homepage.  *Correction: Let's include a minimal backend task, just to acknowledge its potential role, even if minimal for a static page.*\n*   **Reviewer:** Check the outputs for correctness, adherence to requirements, and quality. Review frontend code and architecture.\n\nLet's formulate the tasks for each:\n\n**Architect:**\n*   Define the basic HTML structure for the homepage, including `<header>`, `<main>`, and `<footer>` sections.\n*   Outline the CSS framework or approach (e.g., plain CSS, basic framework).\n*   Specify the basic content for the header and footer (placeholder text for now).\n\n**Frontend:**\n*   Develop the HTML structure based on the Architect's design, creating the `<header>` and `<footer>` elements.\n*   Style the header and footer using CSS to make them visually distinct and basic layout (e.g., header at the top, footer at the bottom).\n*   Ensure basic responsiveness (even if minimal for this simple example).\n\n**Backend:**\n*   (Optional, but include for completeness) Setup a basic static file server configuration to serve the homepage HTML file. (Or just acknowledge the need for deployment).  Let's keep it minimal: \"Ensure the homepage files can be served by a web server.\" or \"Prepare static assets for deployment.\" Let's go with \"Prepare static assets for deployment.\" - more general and applicable even if just HTML/CSS.\n\n**Reviewer:**\n*   Review the HTML structure for semantic correctness and proper use of tags.\n*   Review the CSS for basic styling and layout correctness.\n*   Ensure the header and footer are correctly implemented and positioned.\n\n**Analysis:**\nThe request is to create a simple homepage with a header and footer. This implies a basic webpage structure using HTML, CSS, and potentially minimal JavaScript.  The focus is on structural elements (header, footer) and not on complex functionality. We can approach this as a static webpage project.\n\n**Synthesis:**\nThe Architect will define the structural blueprint. The Frontend will bring it to life with HTML and CSS. The Backend will ensure it can be deployed (even if just static assets). The Reviewer will validate the quality and correctness of the implementation. The final homepage will consist of a header section at the top, a main content area (which can be empty for this simple request), and a footer section at the bottom, all styled with basic CSS.\n\nNow, let's structure this into JSON.{\n  \"analysis\": \"The user requires a simple homepage with a header and footer. This is a basic web page structure. We need to delegate tasks to different worker models to cover architecture, frontend development, and review. Backend tasks will be minimal as it's a static homepage, but we can include a task related to serving static assets.\",\n  \"tasks\": {\n    \"architect\": [\n      \"Define the basic HTML structure for the homepage, including header, main content area, and footer sections.\",\n      \"Outline the basic CSS structure for styling the header and footer.\",\n      \"Specify the semantic HTML tags to be used for header and footer elements.\"\n    ],\n    \"frontend\": [\n      \"Develop the HTML code for the header, main content area, and footer based on the architect's design.\",\n      \"Implement CSS styling for the header and footer to ensure basic visual presentation and layout.\",\n      \"Ensure the header and footer are correctly positioned within the homepage layout.\"\n    ],\n    \"backend\": [\n      \"Prepare static assets (HTML, CSS files) for deployment on a web server.\",\n      \"Outline basic server configuration required to serve the static homepage files.\"\n    ],\n    \"reviewer\": [\n      \"Review the HTML structure for semantic correctness and adherence to architectural guidelines.\",\n      \"Review the CSS for styling and layout correctness against the requirements.\",\n      \"Ensure the header and footer are implemented correctly and are visually consistent.\"\n    ]\n  },\n  \"synthesis\": \"The Architect will define the structural blueprint for the homepage. The Frontend model will then implement the visual aspects using HTML and CSS, focusing on creating the header and footer sections. The Backend model will ensure the static assets are prepared for deployment. Finally, the Reviewer model will validate the outputs from the Architect and Frontend models to ensure correctness and quality, resulting in a simple homepage with a correctly implemented header and footer.\"}","level":"error","message":"JSON Parse Error:","timestamp":"2025-01-22T18:38:16.874Z"}
{"error":"Invalid JSON response from AI: Unexpected token 'T', \"The user w\"... is not valid JSON","input":{"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"Error: Invalid JSON response from AI: Unexpected token 'T', \"The user w\"... is not valid JSON\n    at Function.safeJsonParse (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:206:13)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:251:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:38:16.880Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'T', \"The user w\"... is not valid JSON","stack":"Error: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'T', \"The user w\"... is not valid JSON\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:260:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:38:16.882Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'T', \"The user w\"... is not valid JSON","stack":"Error: Failed to generate code: Failed to get response from AI: Invalid JSON response from AI: Unexpected token 'T', \"The user w\"... is not valid JSON\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:314:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:38:16.883Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 9664ms","timestamp":"2025-01-22T18:38:16.889Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:39:00.186Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:39:14.482Z"}
{"level":"info","message":"Getting master analysis and task delegation...","timestamp":"2025-01-22T18:39:14.485Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:39:17.500Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:281:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:39:17.506Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:335:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:39:17.507Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 3030ms","timestamp":"2025-01-22T18:39:17.510Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:40:39.293Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:41:33.755Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:41:39.662Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:41:43.368Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:41:51.559Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:42:04.987Z"}
{"level":"info","message":"Getting master analysis and task delegation...","timestamp":"2025-01-22T18:42:04.989Z"}
{"level":"info","message":"Getting architecture plan...","timestamp":"2025-01-22T18:42:15.758Z"}
{"error":"No valid JSON found in response","input":{"masterInstructions":["Define basic HTML structure for homepage with header and footer sections.","Determine basic CSS styling approach for header and footer."],"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"Error: No valid JSON found in response\n    at Function.cleanJsonString (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:201:13)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:270:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:42:37.445Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: No valid JSON found in response","stack":"Error: Failed to get response from AI: No valid JSON found in response\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:280:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:42:37.451Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: No valid JSON found in response","stack":"Error: Failed to generate code: Failed to get response from AI: No valid JSON found in response\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:334:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:42:37.453Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 32471ms","timestamp":"2025-01-22T18:42:37.457Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:46:37.246Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:46:58.159Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:47:02.626Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T18:47:02.628Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:47:06.094Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:223:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:47:06.095Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:261:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:47:06.096Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 3472ms","timestamp":"2025-01-22T18:47:06.098Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:48:07.150Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:48:21.185Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:48:26.709Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T18:48:26.711Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T18:48:40.885Z"}
{"level":"info","message":"POST /api/v1/generate - 200 - 23568ms","timestamp":"2025-01-22T18:48:50.277Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:51:44.107Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:51:59.342Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:52:13.190Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T18:52:16.536Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T18:52:23.539Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:52:29.332Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T18:52:29.335Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T18:52:39.810Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/components/Header.tsx","timestamp":"2025-01-22T18:52:47.617Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/styles/header.css","timestamp":"2025-01-22T18:52:47.619Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/...","timestamp":"2025-01-22T18:52:47.620Z"}
{"level":"info","message":"Successfully created all project files","timestamp":"2025-01-22T18:52:47.621Z"}
{"level":"info","message":"POST /api/v1/generate - 200 - 18295ms","timestamp":"2025-01-22T18:52:47.627Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T18:59:38.554Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T18:59:38.558Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T18:59:47.642Z"}
{"error":"Cannot read properties of undefined (reading 'text')","input":{"masterInstructions":["Create Header component","Create Footer component","Create Homepage component","Style Header and Footer","Integrate Header and Footer in Homepage"],"prompt":"Create a simple homepage with header and footer"},"level":"error","message":"Chain Response Error:","stack":"TypeError: Cannot read properties of undefined (reading 'text')\n    at StringOutputParser.parseResult (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:61:42)\n    at StringOutputParser.parseResultWithPrompt (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/@langchain/core/dist/output_parsers/base.cjs:21:21)\n    at LLMChain._getFinalOutput (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:129:55)\n    at LLMChain._call (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/llm_chain.cjs:164:46)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async LLMChain.invoke (/Users/adityamadhabborah/Projects/ai-code-builder/server/node_modules/langchain/dist/chains/base.cjs:58:28)","timestamp":"2025-01-22T18:59:49.260Z"}
{"details":{},"level":"error","message":"AI Service Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:233:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:59:49.266Z"}
{"level":"error","message":"Generation error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')","stack":"Error: Failed to generate code: Failed to get response from AI: Cannot read properties of undefined (reading 'text')\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:271:13)\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/ai.service.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T18:59:49.267Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 10715ms","timestamp":"2025-01-22T18:59:49.269Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T19:00:40.580Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:01:08.094Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:01:34.449Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:02:04.749Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:02:11.028Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:02:16.163Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T19:02:19.083Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T19:02:19.085Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T19:02:20.473Z"}
{"level":"error","message":"Code processing error: Cannot read properties of undefined (reading 'map')","stack":"TypeError: Cannot read properties of undefined (reading 'map')\n    at Function.processFiles (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/utils/codeParser.ts:15:18)\n    at Function.sanitizeCode (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/utils/codeParser.ts:8:24)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:12:40)\n    at Generator.next (<anonymous>)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:41:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:37:12)\n    at Function.processCode (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:56:16)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/controllers/ai.controller.ts:23:47\n    at Generator.next (<anonymous>)","timestamp":"2025-01-22T19:02:23.900Z"}
{"level":"error","message":"Generation error: Invalid code structure","stack":"Error: Invalid code structure\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:23:13)\n    at Generator.next (<anonymous>)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:41:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:37:12)\n    at Function.processCode (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:56:16)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/controllers/ai.controller.ts:23:47\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/controllers/ai.controller.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T19:02:23.902Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 4824ms","timestamp":"2025-01-22T19:02:23.906Z"}
{"level":"info","message":"ðŸ”´ Server stopped","timestamp":"2025-01-22T19:02:49.683Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:03:03.478Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T19:03:03.704Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T19:03:03.706Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T19:03:04.667Z"}
{"level":"error","message":"Code processing error: Cannot read properties of undefined (reading 'map')","stack":"TypeError: Cannot read properties of undefined (reading 'map')\n    at Function.processFiles (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/utils/codeParser.ts:15:18)\n    at Function.sanitizeCode (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/utils/codeParser.ts:8:24)\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:12:40)\n    at Generator.next (<anonymous>)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:41:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:37:12)\n    at Function.processCode (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:56:16)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/controllers/ai.controller.ts:23:47\n    at Generator.next (<anonymous>)","timestamp":"2025-01-22T19:03:06.722Z"}
{"level":"error","message":"Generation error: Invalid code structure","stack":"Error: Invalid code structure\n    at Function.<anonymous> (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:23:13)\n    at Generator.next (<anonymous>)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:41:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:37:12)\n    at Function.processCode (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/services/code.service.ts:56:16)\n    at /Users/adityamadhabborah/Projects/ai-code-builder/server/src/controllers/ai.controller.ts:23:47\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/adityamadhabborah/Projects/ai-code-builder/server/src/controllers/ai.controller.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-22T19:03:06.723Z"}
{"level":"info","message":"POST /api/v1/generate - 500 - 3021ms","timestamp":"2025-01-22T19:03:06.725Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:04:15.636Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T19:04:47.160Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T19:04:47.163Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T19:04:48.728Z"}
{"level":"info","message":"Successfully created all project files","timestamp":"2025-01-22T19:04:50.893Z"}
{"level":"info","message":"POST /api/v1/generate - 200 - 3738ms","timestamp":"2025-01-22T19:04:50.898Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:05:47.761Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T19:05:59.631Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T19:05:59.634Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T19:06:01.101Z"}
{"level":"info","message":"Successfully created all project files","timestamp":"2025-01-22T19:06:04.376Z"}
{"level":"info","message":"POST /api/v1/generate - 200 - 4750ms","timestamp":"2025-01-22T19:06:04.381Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:07:20.775Z"}
{"level":"info","message":"POST /api/v1/generate","timestamp":"2025-01-22T19:07:41.143Z"}
{"level":"info","message":"Getting project structure...","timestamp":"2025-01-22T19:07:41.148Z"}
{"level":"info","message":"Generating code...","timestamp":"2025-01-22T19:07:42.204Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/components/Header.tsx","timestamp":"2025-01-22T19:07:45.551Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/components/Footer.tsx","timestamp":"2025-01-22T19:07:45.553Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/pages/Homepage.tsx","timestamp":"2025-01-22T19:07:45.554Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/styles/header.css","timestamp":"2025-01-22T19:07:45.555Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/styles/footer.css","timestamp":"2025-01-22T19:07:45.556Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/backend/src/routes/index.ts","timestamp":"2025-01-22T19:07:45.558Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/backend/src/controllers/index.ts","timestamp":"2025-01-22T19:07:45.560Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/backend/src/app.ts","timestamp":"2025-01-22T19:07:45.561Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/backend/src/db.ts","timestamp":"2025-01-22T19:07:45.561Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/components/Header.tsx","timestamp":"2025-01-22T19:07:45.562Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/components/Footer.tsx","timestamp":"2025-01-22T19:07:45.563Z"}
{"level":"info","message":"Created file: /Users/adityamadhabborah/Projects/ai-code-builder/server/generated/frontend/src/pages/Homepage.tsx","timestamp":"2025-01-22T19:07:45.563Z"}
{"level":"info","message":"Successfully created all project files","timestamp":"2025-01-22T19:07:45.564Z"}
{"level":"info","message":"POST /api/v1/generate - 200 - 4424ms","timestamp":"2025-01-22T19:07:45.567Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:07:47.666Z"}
{"level":"info","message":"ðŸš€ Server running on port 3000","timestamp":"2025-01-22T19:08:27.148Z"}
